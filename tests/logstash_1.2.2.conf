input {
    stdin {
    }
}

filter {
    grok {
        
        add_field => {    
            "received_at" => "%{@timestamp}"
            "received_from" => "%{@source_host}"
        } 
        
        break_on_match => true
        named_captures_only => true
        patterns_dir => [ "/tmp/logpatterns-groktest" ]   
        match => {    
            "message" => "%{RSYSLOGCUSTOM}"
        } 
    }
    date {
        match => [ "syslog_timestamp", "yyyy-MM-dd'T'HH:mm:ss.SSSSSSZZ", "yyyy-MM-dd'T'HH:mm:ssZZ", "yyyy-MM-dd HH:mm:ss.SSSSSS" ] 
    }
    mutate {
        
        
        exclude_tags => [ "_grokparsefailure" ]   
        replace => {    
            "@source_host" => "%{syslog_hostname}"
            "@message" => "%{syslog_message}"
        } 
    }
    mutate {
        exclude_tags => [ "_grokparsefailure" ]               
        remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]   
        
    }
    bytes2human {
        convert => {
            "volumedata" => "bytes"
            "volumeused" => "bytes"
            "volumeavail" => "bytes"
            "volumetotal" => "bytes"
            "objrecovthr" => "bytes"
        "actwrite" => "bytes"
        "actread" => "bytes"

        }
    }
}

output {
  stdout { codec => json }
}


